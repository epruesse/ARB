#FIG 2.1
80 2
6 194 379 474 419
4 0 18 12 0 -1 0 0.00000 4 12 50 194 419 $input_6
4 0 18 12 0 -1 0 0.00000 4 12 50 249 419 $input_7
4 0 18 12 0 -1 0 0.00000 4 12 50 304 419 $input_8
4 0 18 12 0 -1 0 0.00000 4 12 50 359 419 $input_9
4 0 18 12 0 -1 0 0.00000 4 12 57 414 419 $input_10
4 0 18 10 0 -1 0 0.00000 4 12 6 209 394 0
4 0 18 10 0 -1 0 0.00000 4 12 6 264 394 1
4 0 18 10 0 -1 0 0.00000 4 12 6 319 394 2
4 0 18 10 0 -1 0 0.00000 4 12 6 374 394 3
4 0 18 10 0 -1 0 0.00000 4 12 6 429 394 4
-6
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 159 139 319 139 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 499 119 599 399 599 389 589 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 399 599 389 609 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 499 129 509 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 499 109 509 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 159 599 159 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 199 599 199 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 239 599 239 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 279 599 279 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 319 599 319 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 559 124 559 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 579 124 579 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 539 124 539 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 579 144 563 176 549 208 541 246 539 271 542 309 551 329 560
	 343 568 356 577 364 583 375 593 386 603 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 99 579 99 599 99 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 99 599 104 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 99 599 94 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 99 579 104 584 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 99 579 94 584 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 239 539 239 599 244 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 239 599 234 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 239 539 244 544 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 239 539 234 544 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 239 574 274 614 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 589 239 589 234 584 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 239 589 234 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 589 124 584 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 589 124 594 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 179 614 224 589 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 84 614 94 589 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 99 579 119 579 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 119 599 99 599 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 284 544 324 534 9999 9999
2 1 0 1 -1 0 0 0 0.000 -1 0 0
	 159 274 319 274 9999 9999
2 2 0 1 -1 0 0 0 0.000 0 0 0
	 479 674 479 39 39 39 39 674 479 674 9999 9999
4 0 18 12 0 -1 0 0.00000 4 15 42 399 179 $nodes
4 0 18 10 0 -1 0 0.00000 4 12 6 119 614 0
4 2 18 12 0 -1 0 0.00000 4 15 47 239 69 $reopen
4 0 18 12 0 -1 0 0.00000 4 11 38 49 69 $close
4 2 18 12 0 -1 0 0.00000 4 15 31 459 69 $help
4 0 18 12 0 -1 0 0.00000 4 15 91 54 214 Maximum depth
4 0 18 12 0 -1 0 0.00000 4 15 64 399 219 $maxdepth
4 0 18 12 0 -1 0 0.00000 4 15 56 399 259 $incdepth
4 0 18 12 0 -1 0 0.00000 4 15 39 239 384 $static
4 0 18 12 0 -1 0 0.00000 4 15 298 54 174 Number of randomly chosen nodes from the subtree
4 0 18 12 0 -1 0 0.00000 4 15 166 54 379 Enable static path reduction:
4 0 18 12 0 -1 0 0.00000 4 15 119 69 414 Pathes in each depth
4 0 18 12 0 -1 0 0.00000 4 15 84 69 529 Relative Costs
4 0 18 12 0 -1 0 0.00000 4 15 34 364 624 Depth
4 0 18 12 0 -1 0 0.00000 4 15 56 239 489 $dynamic
4 0 0 10 0 -1 0 0.00000 4 12 64 239 629 maximum costs
4 0 18 10 0 -1 0 0.00000 4 12 33 244 659 $maxy
4 0 18 10 0 -1 0 0.00000 4 12 33 159 659 $maxx
4 0 0 10 0 -1 0 0.00000 4 12 40 74 629 start costs
4 0 18 10 0 -1 0 0.00000 4 12 28 74 659 $start
4 0 18 10 0 -1 0 0.00000 4 12 274 69 309 Each recursion step multiplies the number of paths by 8
4 0 18 10 0 -1 0 0.00000 4 12 337 69 324 (e.g. depth = 8  -> ~16 million paths -> two heuristic path reductions)
4 0 18 10 0 -1 0 0.00000 4 12 257 69 189 ( 0.0 == no nodes, 1.0 all nodes,  2.0 all nodes twice)
4 0 18 12 0 -1 0 0.00000 4 15 180 54 484 Enable dynamic path reduction:
4 0 0 10 0 -1 0 0.00000 4 12 101 339 533 get's worse than this line
4 0 0 10 0 -1 0 0.00000 4 12 85 339 519 Stop recursion if tree
4 1 18 12 0 -1 0 0.00000 4 15 271 239 119 K.L. is a heuristic  approach to find the best tree
4 0 18 12 0 -1 0 0.00000 4 15 236 54 254 If a better tree is found, increase depth by
4 0 0 10 0 -1 0 0.00000 4 12 80 144 629 Worst trees at depth
