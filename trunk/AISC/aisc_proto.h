/* This file is generated by aisc_mkpt.
 * Any changes you make here will be overwritten later!
 */

#ifndef AISC_PROTO_H
#define AISC_PROTO_H

/* define ARB attributes: */
#ifndef ATTRIBUTES_H
# include <attributes.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif


/* aisc.c */
char *read_aisc_file(char *path);
TokenListBlock *parse_aisc_TokenListBlock(const char *&in);
CL *calloc_CL(void);
void free_CL(CL *cl);

/* aisc_commands.c */
void print_error_internal(const char *err, const char *launcher_file, int launcher_line);
void print_warning_internal(const char *err, const char *launcher_file, int launcher_line);
const char *formatted(const char *format, ...) __ATTR__FORMAT(1);
void aisc_remove_files(void);
int do_com_push(const char *str);
void free_stack(void);
int run_prg(void);

/* aisc_mix.c */
CL *aisc_calc_blocks(CL *co, CL *afor, CL *aif, int up);
int aisc_calc_special_commands(void);
struct hash_struct *create_hash(int size);
char *read_hash_local(char *key, struct hash_struct **hs);
char *read_hash(struct hash_struct *hs, char *key);
char *write_hash(struct hash_struct *hs, const char *key, const char *val);
int free_hash(struct hash_struct *hs);

/* aisc_var_ref.c */
const Token *aisc_find_var(const Token *cursor, char *str, LookupScope scope);
const Token *aisc_find_var_hier(const Token *cursor, char *str, LookupScope scope);
char *get_var_string(char *var);

#ifdef __cplusplus
}
#endif

#else
#error aisc_proto.h included twice
#endif /* AISC_PROTO_H */
