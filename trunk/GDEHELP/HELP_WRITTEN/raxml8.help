# Generated from XML with Sablotron -- Stylesheet by Ralf Westram (ralf@arb-home.de)
#
#  ****  You may edit this file, but the next ARB update will overwrite your changes  ****
#
# This page was converted by arb_help2xml and may look strange.
# If you think it's really bad, please send a
# mail [mailto: helpfeedback@arb-home.de  subject: 'Helppage agde_raxml.xml looks weird']
# to our help keeper.

# UP references:
UP                  arb.hlp
UP                  glossary.hlp
UP                  agde.hlp

# SUB references:

# ------------------------------------------------------------
# Start of real helpfile:
TITLE	RAxML

DESCRIPTION

    RAxML (Randomized Axelerated Maximum Likelihood) is a program for
    sequential and parallel Maximum Likelihood-based inference of large
    phylogenetic trees.

    It has originally been derived from fastDNAml which in turn was derived
    from Joe Felsenteins dnaml which is part of the PHYLIP package.

    Author: Alexandros Stamatakis

        Ecole Polytechnique Federale de Lausanne School of Computer &
        Communication Sciences Laboratory for Computational Biology and
        Bioinformatics (LCBB)

        Alexandros.Stamatakis@epfl.ch

    Original documentation can be found at
    http://icwww.epfl.ch/~stamatak/index-Dateien/countManual7.0.0.php

    Several parts of this documentation have been used here.



PARAMETERS

    Here we only describe the parameters adjustable via the ARB interface.

    Weighting mask

        Specify a weighting mask for the alignment. This increases penalty
        for mismatches in conservative regions and decreases it in variable
        regions of the alignment.

        Since RAxML only accepts natural numbers as weights, ARB has to
        multiply the weights of e.g. POS_VAR_BY_PARSIMONY, such that the
        smallest weight equals 1.

        As a consequence the likelyhood of the calculated tree is ~ 100000
        times higher than w/o weighting mask.

    Base tree / Use as constraint tree / Generate random starting tree

        Specifying a base tree works different depending on several other
        parameters.

        Generally there are four different possibilities:

            * If you don't select a base tree (i.e. select '????') RAxML
              generates a starting tree using a Maximum Parsimony algorithm

            * If you additionally set 'Generate random starting tree' to
              'Yes' RAxML generates a completely random starting tree. On
              smaller datasets (around 100-200 taxa) it has been observed
              that this might sometimes yield topologies of distinct local
              likelihood maxima which better correspond to empirical
              expectations.

            * If you select a base tree, RAxML adds all species which are
              marked but are not in tree to this base tree using Maximum
              Parsimony. The resulting tree is then optimized using the
              selected RAxML algorithm.

            * If you set 'Use as constraint tree' to 'Yes' the topology of
              the given base tree will not be changed, only the position of
              the added species will be rearranged.

        Notes:

            * All species contained in the 'Base tree' have to marked -
              otherwise RAxML will stop with an error.

    Nucleotide Substitution Model / Rate Distribution Model / AA
    Substitution Model

        Please refer to the original documentation for details on
        Substitution Models

    Number of rate categories (DNA GTRCAT only)

        This option allows you to specify the number of distinct rate
        categories, into which the individually optimized rates for each
        individual site are ?thrown? (Default = 25)

    Optimize branches/parameters

        Specifies that RAxML shall optimize branches and model parameters
        on bootstrapped trees as well as print out the optimized
        likelihood. Note, that this option only makes sense when used with
        the GTRMIX or GTRGAMMA models (or the respective AA models)!

    RAxML algorithm

        new rapid hill climbing

            RAxML will execute the new (as of version 2.2.1) and
            significantly faster rapid hill-climbing algorithm

        old hill climbing

            RAxML will execute the slower old search algorithm of version
            2.1.3, this is essentially just for backward compatibility.

        optimize input tree

            RAxML will optimize the model parameters and branch lengths of
            the selected 'Base tree' under GTRGAMMA

        rapid bootstrap analysis

            tell RAxML to conduct a rapid Bootstrap analysis and search for
            the best-scoring ML tree in one single program run.

            Uses the seed specified at 'Random seed'

        advanced bootstrap + refinement of BS tree

            performs a really thorough standard bootstrap. RAxML will
            refine the final BS tree under GAMMA and a more exhaustive
            algorithm.

        add new sequences to input tree (MP)

            performs just pure stepwise MP addition of new sequences to an
            incomplete starting tree.

            You have to mark all species in tree AND all species which
            should be added to the tree.

            Note: RAxML has a bug in the tree-reader and rejects many trees
            as unrooted/multifurcated. You can to use 'Tree/Beautify Tree'
            and select the lowest mode (short branches first) as a
            workaround.

        randomized tree searches (fixed start tree)

            will perform several randomized tree searches (as specified at
            'Number of runs'), that always start from one fixed starting
            tree.

    Random seed

        Used as random seed for 'rapid bootstrap analysis'

    Initial rearrangement setting

        This allows you to specify an initial rearrangement setting for the
        initial phase of the search algorithm. If you specify e.g. 10 the
        pruned subtrees will be inserted up to a distance of 10 nodes away
        from their original pruning point.

        If you donâ€™t specify anything here, a "good" initial rearrangement
        setting will automatically be determined by RAxML.

    Number of runs

        Enter a number > 1 to run the selected algorithm multiple times.
        Specifying e.g. '10' will result in 10 generated trees.

    Select ## best trees

        If 'Number of runs' is > 1, this specifies how many of the
        generated tree shall be imported or merge using consense.

        The trees with the best likelyhood will be selected.

    What to do with selected trees?

        Import into ARB

            All selected trees will be imported into ARB

        Create consense tree

            Calls consense on all selected trees and imports the resulting
            consense tree into ARB.

