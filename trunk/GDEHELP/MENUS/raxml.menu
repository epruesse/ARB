// this menu defines windows for two RAxml interfaces: DNA and PROTEIN
// (depending on whether RAXML_DNA is defined or not)

#define RAXML_CODE(_TYPE_,_PARAMS_) \
        (GOTO_LOCAL_DIR ; \
         arb_export_rates -r "$RATES" > weights; \
         arb_convert_aln -GenBank in1 -phylip2 infile; \
         RUN_IN_WINDOW(arb_raxml _TYPE_ infile weights "$TREE" $CONSTRAINT \
                                $RANDOMSTART $OPTIMIZEPARAMETERS $SEARCH \
                                "$INITIALREARRANGEMENT" "$SEED" \
                                "$NUMBEROFRUNS" "$TAKETREES" $CONSENSE \
                                _PARAMS_ \
                        ); \
        RM_LOCAL_FILES(in1 last.infile treefile.in weights RAxML_info.treefile) )& 

#ifdef RAXML_DNA
        item:RAxML (DNA)
        itemmethod: RAXML_CODE(DNA,$RATEMODELNUC $NUMCATEGORIES)
        seqtype:N
        itemmeta:R
#else
        item:RAxML (Protein)
        itemmethod: RAXML_CODE(PROTEIN,"$RATEMODELPROT" "$MATRIXNAME$EMPBFREQ")
        seqtype:A
        itemmeta:P
#endif
itemhelp:raxml.help

arg:RATES
argtype:weights
arglabel:Select a Weighting Mask
argchoice:POS_VAR_BY_PAR

arg:TREE
argtype:tree
arglabel:Base tree
argchoice:????

arg:CONSTRAINT
argtype:choice_menu
arglabel:Use as constraint tree
argchoice:No:0
argchoice:Yes:1

arg:RANDOMSTART
argtype:choice_menu
arglabel:Generate random starting tree\n(if no tree selected)
argchoice:No:0
argchoice:Yes:1



#ifdef RAXML_DNA

        arg:RATEMODELNUC
        argtype:choice_menu
        arglabel: Rate Distribution Model
        argchoice:GTRCAT:GTRCAT../PERL_SCRIPTS/ARBTOOLS/raxml2arb.pl
        argchoice:GTRMIX:GTRMIX
        argchoice:GTRGAMMA:GTRGAMMA
        argchoice:GTRCAT_GAMMA:GTRCAT_GAMMA
        argchoice:GTRGAMMAI:GTRGAMMAI
        argchoice:GTRMIXI:GTRMIXI
        argchoice:GTRCAT_GAMMAI:GTRCAT_GAMMAI
        
        arg:NUMCATEGORIES
        argtype:text
        arglabel: # rate categories (GTRCAT only)
        argtext:25

#else

        arg:RATEMODELPROT
        argtype:choice_menu
        arglabel:Rate Distribution Model
        argchoice:PROTCAT:PROTCAT
        argchoice:PROTGAMMA:PROTGAMMA
        argchoice:PROTMIX:PROTMIX
        argchoice:PROTCAT_GAMMA:PROTCAT_GAMMA
        argchoice:PROTGAMMAI:PROTGAMMAI
        argchoice:PROTMIXI:PROTMIXI
        argchoice:PROTCAT_GAMMAI:PROTCAT_GAMMAI
        
        arg:MATRIXNAME
        argtype:choice_menu
        arglabel:AA Substitution Model
        argchoice:DAYHOFF:DAYHOFF
        argchoice:DCMUT:DCMUT
        argchoice:JTT:JTT
        argchoice:MTREV:MTREV
        argchoice:WAG:WAG
        argchoice:RTREV:RTREV
        argchoice:CPREV:CPREV
        argchoice:VT:VT
        argchoice:BLOSUM62:BLOSUM62
        argchoice:MTMAM:MTMAM
        argchoice:GTR:GTR

        arg:EMPBFREQ
        arglabel:Use empirical base frequencies?
        argtype:choice_menu
        argchoice:No:
        argchoice:Yes:F

#endif

arg:OPTIMIZEPARAMETERS
argtype:choice_menu
#ifdef RAXML_DNA
        arglabel:Optimize branches/parameters\n(GTRMIX / GTRGAMMA only)
#else
        arglabel:Optimize branches/parameters\n(PROTMIX / PROTGAMMA only)
#endif
argchoice:No:0
argchoice:Yes:1

arg:SEARCH
argtype:choice_menu
arglabel:Select RAxML algorithm
argchoice:new rapid hill climbing:d
argchoice:old hill climbing:o
argchoice:optimize input tree:e
argchoice:rapid bootstrap analysis:a
argchoice:advanced bootstrap + refinement of BS tree:i
argchoice:add new sequences to input tree (MP):p
argchoice:randomized tree searches (fixed start tree):t

// argchoice:optimize input tree (GAMMA/GAMMAI only):e
// argchoice:advanced bootstrap + refinement of BS tree (GAMMA):i
// argchoice:randomized tree searches on one fixed starting tree:t

arg:SEED
argtype:text
arglabel:Random seed\n(empty=use time)
argtext:

arg:INITIALREARRANGEMENT
argtype:text
arglabel:Initial rearrangement setting\n(empty=autodetect)
argtext:

arg:NUMBEROFRUNS
argtype:text
arglabel:Number of runs
argtext:1

arg:TAKETREES
argtype:text
arglabel:Select ## best trees
argtext:1

arg:CONSENSE
argtype:choice_menu
arglabel:What to do with selected trees?
argchoice:Import into ARB:import
argchoice:Create consense tree:consense

in:in1
informat:genbank
inmask:
insave:

