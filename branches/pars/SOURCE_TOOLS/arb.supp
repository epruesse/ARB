#
# This is a valgrind suppression file that should be used when using valgrind with arb.
#
# Contains common errors
# - motif specific errors should go into arb_motif.supp
# - gtk   specific errors should go into arb_gtk.supp
#
# see also arb_valgrind@suppressions
# see also LeakSanitizer suppressions in arb.leaksan.supp

{
   arb: leaks loaded xfig-data with AW_window
   Memcheck:Leak
   ...
   fun:_ZN9AW_window9load_xfigEPKcb
   ...
}

{
   arb: TEST_tree_remove_add_all leaks edges
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN12AP_tree_edge10initializeEP12AP_tree_nlen
   ...
   fun:_Z24TEST_tree_remove_add_allv
}
{
   arb: TEST_tree_remove_add_all leaks edges
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN12AP_tree_nlen*insertEPS_*
   fun:_Z24TEST_tree_remove_add_allv
}
{
   arb: TEST_tree_remove_add_all leaks nodes
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK22AP_TreeNlenNodeFactory8makeNodeEP8TreeRoot
   ...
   fun:_Z24TEST_tree_remove_add_allv
}


{
   arb: TEST_tree_add_marked leaks nodes
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN12AP_tree_edge10initializeEP12AP_tree_nlen
   ...
   fun:_Z20TEST_tree_add_markedv
}
{
   arb: TEST_tree_add_marked leaks nodes
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK22AP_TreeNlenNodeFactory8makeNodeEP8TreeRoot
   ...
   fun:_ZL6nt_addP16AWT_graphic_tree7AddWhatb
   ...
   fun:_Z20TEST_tree_add_markedv
}
