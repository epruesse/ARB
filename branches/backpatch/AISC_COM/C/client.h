/* This file is generated by aisc_mkpt.
 * Any changes you make here will be overwritten later!
 */

#ifndef CLIENT_H
#define CLIENT_H

#ifndef P_
# if defined(__STDC__) || defined(__cplusplus)
#  define P_(s) s
# else
#  define P_(s) ()
# endif
#else
# error P_ already defined elsewhere
#endif

/* define ARB attributes: */
#ifndef ATTRIBUTES_H
# include <attributes.h>
#endif


/* client.c */

#include <client_types.h>

int aisc_c_read P_((int socket, char *ptr, long size));
int aisc_c_write P_((int socket, char *ptr, int size));
int aisc_c_send_bytes_queue P_((aisc_com *link));
int aisc_add_message_queue P_((aisc_com *link, long size));
int aisc_check_error P_((aisc_com *link));
char *aisc_client_get_hostname P_((void));
const char *aisc_client_get_m_id P_((const char *path, char **m_name, int *id));
void *aisc_init_client P_((aisc_com *link));
extern "C" aisc_com *aisc_open P_((const char *path, long *mgr, long magic));
extern "C" int aisc_close P_((aisc_com *link));
int aisc_get_message P_((aisc_com *link));
int aisc_get P_((aisc_com *link, int o_type, long object, ...)) __ATTR__SENTINEL;
long *aisc_debug_info P_((aisc_com *link, int o_type, long object, int attribute));
int aisc_put P_((aisc_com *link, int o_type, long object, ...)) __ATTR__SENTINEL;
int aisc_nput P_((aisc_com *link, int o_type, long object, ...)) __ATTR__SENTINEL;
int aisc_create P_((aisc_com *link, int father_type, long father, int attribute, int object_type, long *object, ...)) __ATTR__SENTINEL;
int aisc_copy P_((aisc_com *link, int s_type, long source, int father_type, long father, int attribute, int object_type, long *object, ...)) __ATTR__SENTINEL;
int aisc_delete P_((aisc_com *link, int object_type, long source));
int aisc_find P_((aisc_com *link, int father_type, long father, int attribute, int object_type, long *object, char *ident));

#undef P_

#else
#error client.h included twice
#endif /* CLIENT_H */
