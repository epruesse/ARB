IF $(argc) < 4
    ERROR Wrong number of parameters[$(argc)]. Usage: aisc aisc_debug_globals.pa xxx.aisc outfile
ENDIF

# LOAD DATA
DATA AISC { $(#FILE $(argv[2])) };
DUMPDATA DUMP/aisc_debug_globals.pa__$(argv[2]).dump

OPEN save $(argv[3])

# SET CURSOR
MOVETO $(AISC/PROJECT)
OUT save
MOVETO $(DATA/.)

P /* -----------------------------------------------------------------
P  * Created automagically from ../$(argv[2])
P  * using aisc-script '../AISC/aisc_debug_globals.pa'
P  * DO NOT EDIT THIS FILE!!!
P  * ----------------------------------------------------------------- */
--
P #include <aisc_com.h>
P #include <client.h>
P #include <stdio.h>
--
P extern int       aisc_core_on_error;
P extern aisc_com *aisc_client_link;
--
P extern "C" {
P $1char *aisc_debug_local(aisc_com *, enum Aisc_Object_Type, void *, const char *, ...);
P }
--

# BUILD CALLING FUNCTION FOR EACH STRUCTURE
CREATE $(str) 0
CREATE $(keys)

FOR $(STRUCT)
    IF $(SKEY)
        P static char *aisc_debug_$(STRUCT)(aisc_com *link,void *object) { // $(SDOCU|$(STRUCT))
        INDENT +1

            PUSH
            SET $(keys)
            CALL build_key_list,$(SKEY)_
            POP

            P return aisc_debug_local(
            INDENT +1
                P link, $(OBJECT_KEY)_$(SKEY), object,
                P "$(keys)undef",
                P $(keys) (long)0
            INDENT -1
            P );
        INDENT -1
        P }
        --
    ENDIF
ENDFOR

# BUILD MAIN DEBUG FUNCTION
P const char *md2(void *object) {
INDENT +1
    P aisc_core_on_error = 0;
    --
    P const char *s    = "unknown object";
    P aisc_com   *link = aisc_client_link;
    P int         key;
    --
    P if (aisc_get(link,$(OBJECT_KEY)_COMMON, (long)object, COMMON_KEY, &key, NULL) == 0) {
    INDENT +1
        P switch (key) {
        INDENT +1
            FOR $(STRUCT)
                IF $(JOINED)
                ELSEIF $(SKEY)
                    P case $(OBJECT_KEY)_$(SKEY): $|s = aisc_debug_$(STRUCT)(link, object); break;
                ENDIF
            ENDFOR
            P default: $|s = 0; break;
        INDENT -1
        P }
    INDENT -1
    P }
    --
    P aisc_core_on_error = 1;
    P return s;
INDENT -1
P }

CLOSE save

EXIT

FUNCTION build_key_list,s
    FOR $({/TYPE)
        IF $(KEY)
            IF $(REF) ~ %,*,v
            ELSEIF $(TYPE) = dllh
                SET $(keys) $(keys)$(s)PRED,$(s)NEXT,
                SET $(str) $(s)$(KEY)
                PUSH
                MOVETO $(/AISC/DATA/STRUCT.dll_header)
                CALL build_key_list $(str)
                POP
            ELSEIF $(REF) ~ s
                SET $(str) $(s)$(KEY)
                PUSH
                MOVETO $(/AISC/DATA/STRUCT.$(TYPE))
                CALL build_key_list $(str)
                POP
            ELSEIF $(REF) ~ e,t,d
                SET $(keys) $(keys)$(s)$(KEY),
            ENDIF
        ENDIF
    ENDFOR
RETURN
